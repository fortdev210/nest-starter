// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String   @unique
  first_name        String?
  last_name         String?
  password          String
  is_email_verified Boolean  @default(false)
  created_at        DateTime @default(now()) @db.Timestamptz(3)
  updated_at        DateTime @updatedAt @db.Timestamptz(3)
  Plan              Plan[]

  @@map("users")
}

model Plan {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user        User        @relation(fields: [user_id], references: [id])
  eating_info EatingInfo?
  user_id     String      @db.Uuid
  health_info HealthInfo?
  goal_info   Goal?
}

model EatingInfo {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cooking_skill    String
  plan_feed_number Int
  allergy_food     String[]
  type             String
  plan             Plan     @relation(fields: [plan_id], references: [id])
  plan_id          String   @unique @db.Uuid
}

model HealthInfo {
  id                            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan                          Plan       @relation(fields: [plan_id], references: [id])
  plan_id                       String     @unique @db.Uuid
  general_rate                  HealthRate
  chronic_condition             String[]
  supplements_using             String[]
  exercise                      Json
  number_of_glasses_daily_water Int
}

model Goal {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan                Plan     @relation(fields: [plan_id], references: [id])
  plan_id             String   @unique @db.Uuid
  gender              Gender
  dob                 DateTime @db.Time
  start_date          DateTime @db.Timestamptz(3)
  upper_arm           Int
  hips                Int
  waist               Int
  thigh               Int
  height              Int
  weight              Int
  highest_weight      Int
  goal_weight         Int
  front_photo_url     String   @db.VarChar(64)
  left_photo_url      String   @db.VarChar(64)
  non_scale_victories String[]
  vision_statement    Json
}

enum HealthRate {
  EXCELLENT
  GOOD
  FAIR
  POOR
}

enum PlanType {
  WEIGHT_LOSS
  FEEL_BETTER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum AllergyFood {
  DAIRY
  SHELLFISH
  GLUTEN
  BEEF
  FISH
  CHICKEN
  PORK
  NUTS
  EGGS
  SOY
}
